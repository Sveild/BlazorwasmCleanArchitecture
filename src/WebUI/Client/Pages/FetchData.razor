@page "/fetchdata"

@using System.Collections.ObjectModel

<PageTitle>Weather forecast</PageTitle>

<MudText Typo="Typo.h4">Weather forecast</MudText>

<MudText Typo="Typo.body1">This component demonstrates fetching data from the server.</MudText>

@if (_forecasts == null)
{
    <MudText Typo="Typo.body1" ><em>Loading...</em></MudText>
}
else
{
    <MudTable Items="_forecasts" Hover="true">
        <HeaderContent>
            <MudTh>Date</MudTh>
            <MudTh>Temp. (C)</MudTh>
            <MudTh>Temp. (F)</MudTh>
            <MudTh>Summary</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.Date.ToShortDateString()</MudTd>
            <MudTd>@context.TemperatureC</MudTd>
            <MudTd>@context.TemperatureF</MudTd>
            <MudTd>@context.Summary</MudTd>
        </RowTemplate>
    </MudTable>
}

@code {
    [Inject] private IWeatherForecastClient _weatherForecastClient { get; set; }
    
    private ObservableCollection<WeatherForecast>? _forecasts;

    protected override async Task OnInitializedAsync()
    {
        _forecasts = await _weatherForecastClient.GetAsync();
    }
}